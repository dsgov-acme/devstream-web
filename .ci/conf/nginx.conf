
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;

  keepalive_timeout  65;

  gzip on;
  gzip_types application/javascript;
  gzip_buffers 32 8k;

  map $http_accept_language $accept_language {
    ~*^en en;
    ~*^zz zz;
  }

  server {
	  listen 80;
	  root   /usr/share/nginx/html;
	  absolute_redirect off;
	  add_header Content-Security-Policy "block-all-mixed-content" always;

	  if ($http_user_agent ~* "^GoogleHC") {
		  return 200 "GoogleHC healthy\n";
	  }

	  # Fallback to default language if no preference defined by browser
	  if ($accept_language ~ "^$") {
		  set $accept_language "en";
	  }

	  location /nginx-health {
		  default_type text/plain;
		  return 200 "healthy\n";
	  }

	  # set accept_language for root without path, matches: https://hostname/
	  # rewrite ^/$ /$accept_language permanent;

	  # # Match on language prefix and direct to Angular, matches: https://hostname/$accept_language/any/path
	  # location ~ ^/(en|zz) {
		  # try_files $uri /$1/index.html?$args;
	  # }

	  # # If no language prefix is present set to accept_language, matches: https://hostname/some/path
	  # location / {
		  # rewrite ^/(.*)$ /$accept_language/$1;
	  # }

    location / {
        try_files $uri /index.html?$args;
    }
  }
}
